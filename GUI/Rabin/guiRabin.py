# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
import ast
from pathlib import Path

from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import messagebox
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
from sympy import isprime
from numpy import cumsum

from rabin import ClassRabin


def guiRabin(windows):

    OUTPUT_PATH = Path(__file__).parent
    ASSETS_PATH = OUTPUT_PATH / Path("./assets")
    global button_image_1, button_image_2, button_image_3, button_image_4


    def relative_to_assets(path: str) -> Path:
        return ASSETS_PATH / Path(path)

    rab = ClassRabin()

    canvas = Canvas(
        windows,
        bg="#E4E4EE",
        height=692 - 28,
        width=1191,
        bd=0,
        highlightthickness=0,
        relief="ridge"
    )

    canvas.place(x=0, y=28)
    canvas.create_rectangle(
        630.0,
        0.0,
        1442.0,
        1024.0,
        fill="#164FD5",
        outline="")

    canvas.create_text(
        42.0,
        24.0,
        anchor="nw",
        text="Rabin",
        fill="#000000",
        font=("Inter", 64 * -1)
    )

    button_image_1 = PhotoImage(
        file=relative_to_assets("button_1.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: [rab.gen_key(), entry_1.delete(0, 'end'), entry_2.delete(0, 'end'), entry_3.delete(0, 'end'),
                         entry_6.delete(0, 'end'), entry_1.insert(0, str(rab.p)), entry_2.insert(0, str(rab.q)),
                         entry_6.insert(0, str(rab.B)), eText.set(str(rab.n))],
        relief="flat"
    )
    button_1.place(
        x=780.0,
        y=147.0 + 28,
        width=277.0,
        height=65.0
    )

    def cipherer():
        if is_a_good_prime(entry_1.get()) and is_a_good_prime(entry_2.get()):
            if entry_6.get().isnumeric():
                rab.p = int(entry_1.get())
                rab.q = int(entry_2.get())
                rab.n = rab.p * rab.q
                eText.set(str(rab.n))
                temp = int(entry_6.get())
                entry_6.delete(0, 'end')
                entry_6.insert(0, str(temp % rab.n))
                if entry_4.get("1.0", END).replace(' ', '').replace('\n', '').isalpha():
                    entry_7.config(state='normal')
                    entry_7.delete(1.0, END)
                    entry_7.insert(1.0, str(rab.encrypt(entry_4.get("1.0", END))))
                    entry_7.config(state='disabled')
                else:
                    messagebox.showwarning("", "    ingrese un mensaje válido    ")
            else:
                messagebox.showwarning("", "    ingrese un valor válido de B    ")
        else:
            messagebox.showwarning("", "    ingrese valores primos válidos    ")

    button_image_2 = PhotoImage(
        file=relative_to_assets("button_2.png"))
    button_2 = Button(
        image=button_image_2,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: cipherer(),
        relief="flat"
    )
    button_2.place(
        x=69.0,
        y=597.0 + 28,
        width=160.0,
        height=65.0
    )

    def decipherer():
        if is_a_good_prime(entry_1.get()) and is_a_good_prime(entry_2.get()):
            if entry_6.get().isnumeric():
                rab.p = int(entry_1.get())
                rab.q = int(entry_2.get())
                rab.n = rab.p * rab.q
                eText.set(str(rab.n))
                temp = int(entry_6.get())
                entry_6.delete(0, 'end')
                entry_6.insert(0, str(temp % rab.n))
                result = rab.num_to_text(
                    rab.decrypt(ast.literal_eval(entry_4.get("1.0", END).replace(' ', '').replace('\n', ''))))
                # result = rab.decrypt(ast.literal_eval(entry_4.get("1.0",END).replace(' ','').replace('\n','')))
                # Aqui usar rab.num_to_text(rab.decrypt)
                entry_5.config(state='normal')
                entry_5.delete('1.0', END)
                t = ''
                block_separation = [0]
                for i in range(len(result)):
                    l = str(result[i][0])
                    t += l + " "
                    block_separation.append(len(l))
                print(block_separation)
                block_separation = cumsum(block_separation)
                print(block_separation)
                entry_5.insert(END, t + '\n')
                # posible_colors=['black','red']
                tag = ''
                # for i in range(len(result)):
                #     tag+='a'
                #     entry_5.tag_add(tag, "1."+str(block_separation[i]), "1."+str(block_separation[i+1]+1))
                #     entry_5.tag_config(tag, foreground=posible_colors[i%2])
                entry_5.config(state='disabled')
                t = ''
            else:
                messagebox.showwarning("", "    ingrese un valor válido de B    ")
        else:
            messagebox.showwarning("", "    ingrese valores primos válidos    ")

    button_image_4 = PhotoImage(
        file=relative_to_assets("button_4.png"))
    button_4 = Button(
        image=button_image_4,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: decipherer(),
        relief="flat"
    )
    button_4.place(
        x=260.0,
        y=597.0 + 28,
        width=160.0,
        height=65.0
    )

    def is_a_good_prime(p):
        if p.isnumeric():
            p = int(p)
            if p % 4 == 3 and isprime(p):
                return True
            else:
                return False
        else:
            return False

    def calc_n():
        if entry_1.get().isnumeric() and is_a_good_prime(entry_1.get()):
            rab.p = int(entry_1.get())
        if entry_2.get().isnumeric() and is_a_good_prime(entry_2.get()):
            rab.q = int(entry_2.get())
        if entry_1.get().isnumeric() and entry_2.get().isnumeric() and is_a_good_prime(
                entry_1.get()) and is_a_good_prime(entry_2.get()):
            rab.n = rab.p * rab.q
            eText.set(str(rab.n))
            if entry_6.get().isnumeric():
                temp = int(entry_6.get())
                entry_6.delete(0, 'end')
                entry_6.insert(0, str(temp % rab.n))
        else:
            eText.set('Alguno de los valores no es un primo adecuado')

    button_image_3 = PhotoImage(
        file=relative_to_assets("button_3.png"))
    button_3 = Button(
        image=button_image_3,
        borderwidth=0,
        highlightthickness=0,
        command=calc_n,
        relief="flat"
    )
    button_3.place(
        x=806.0,
        y=239.0 + 28,
        width=236.0,
        height=51.0
    )

    def on_enter(e):
        if entry_1.get() == 'Inserte un primo válido o genere una clave':
            entry_1.delete(0, 'end')

    def on_leave(e):
        if entry_1.get() == '':
            entry_1.insert(0, 'Inserte un primo válido o genere una clave')

    entry_image_1 = PhotoImage(
        file=relative_to_assets("entry_1.png"))
    entry_bg_1 = canvas.create_image(
        299.5,
        176.5,
        image=entry_image_1
    )
    entry_1 = Entry(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11}
    )
    entry_1.bind("<FocusIn>", on_enter)
    entry_1.bind("<FocusOut>", on_leave)
    entry_1.insert(0, 'Inserte un primo válido o genere una clave')
    entry_1.place(
        x=55.0,
        y=147.0 + 28,
        width=489.0,
        height=57.0
    )

    canvas.create_text(
        42.0,
        118.0,
        anchor="nw",
        text="Primo p",
        fill="#164FD5",
        font=("Inter", 24 * -1)
    )

    def on_enter(e):
        if entry_2.get() == 'Inserte un primo válido o genere una clave':
            entry_2.delete(0, 'end')

    def on_leave(e):
        if entry_2.get() == '':
            entry_2.insert(0, 'Inserte un primo válido o genere una clave')

    entry_image_2 = PhotoImage(
        file=relative_to_assets("entry_2.png"))
    entry_bg_2 = canvas.create_image(
        299.5,
        274.5,
        image=entry_image_2
    )
    entry_2 = Entry(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11}
    )
    entry_2.bind("<FocusIn>", on_enter)
    entry_2.bind("<FocusOut>", on_leave)
    entry_2.insert(0, 'Inserte un primo válido o genere una clave')
    entry_2.place(
        x=55.0,
        y=245.0 + 28,
        width=489.0,
        height=57.0
    )

    canvas.create_text(
        43.0,
        216.0,
        anchor="nw",
        text="Primo q",
        fill="#164FD5",
        font=("Inter", 24 * -1)
    )

    entry_image_3 = PhotoImage(
        file=relative_to_assets("entry_3.png"))
    entry_bg_3 = canvas.create_image(
        299.5,
        374.5,
        image=entry_image_3
    )
    eText = StringVar()
    entry_3 = Entry(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11},
        textvariable=eText,
        state='disabled'
    )
    entry_3.place(
        x=55.0,
        y=345.0 + 28,
        width=489.0,
        height=57.0
    )
    entry_3.configure(disabledbackground="#C4C4C4", disabledforeground="black")

    canvas.create_text(
        43.0,
        318.0,
        anchor="nw",
        text="Número n",
        fill="#164FD5",
        font=("Inter", 24 * -1)
    )

    entry_image_4 = PhotoImage(
        file=relative_to_assets("entry_4.png"))
    entry_bg_4 = canvas.create_image(
        299.5,
        512.0,
        image=entry_image_4
    )
    entry_4 = Text(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        padx=5,
        pady=5,
        font={'family': 'Consolas', 'size': 12}
    )

    scrollbar_4 = Scrollbar(windows, orient='vertical', command=entry_4.yview)
    scrollbar_4.place(x=544.0, y=451.0 + 28, height=120.0)
    entry_4.configure(yscrollcommand=scrollbar_4.set)
    entry_4.place(
        x=55.0,
        y=451.0 + 28,
        width=489.0,
        height=120.0
    )

    canvas.create_text(
        43.0,
        422.0,
        anchor="nw",
        text="Texto claro o cifrado",
        fill="#164FD5",
        font=("Inter", 24 * -1)
    )

    entry_image_5 = PhotoImage(
        file=relative_to_assets("entry_5.png"))
    entry_bg_5 = canvas.create_image(
        917.5,
        512.0,
        image=entry_image_5
    )
    entry_5 = Text(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        # justify='center', #no sirve de nada pero no deja que se ponga el scrollbar que tiene líos con las imágenes
        # padx=5,
        # pady=5,
        font={'family': 'Consolas', 'size': 12},
        wrap=CHAR
    )

    scrollbar_5 = Scrollbar(windows, orient='vertical', command=entry_5.yview)
    scrollbar_5.place(x=1120.0, y=451.0 + 28, height=120.0)
    entry_5.configure(yscrollcommand=scrollbar_5.set)
    entry_5.place(
        x=673.0,
        y=451.0 + 28,
        width=453.0,
        height=120.0
    )
    entry_5.config(state='disabled')
    canvas.create_text(
        677.0,
        422.0,
        anchor="nw",
        text="Texto descifrado",
        fill="#FFFFFF",
        font=("Inter", 24 * -1)
    )

    entry_image_6 = PhotoImage(
        file=relative_to_assets("entry_6.png"))
    entry_bg_4 = canvas.create_image(
        895.5,
        374.5,
        image=entry_image_6
    )
    entry_6 = Entry(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11}
    )
    entry_6.place(
        x=673.0,
        y=345.0 + 28,
        width=100.0,
        height=57.0
    )
    canvas.create_text(
        667.0,
        315.0,
        anchor="nw",
        text="Número B",
        fill="#FFFFFF",
        font=("Inter", 24 * -1)
    )

    entry_image_7 = PhotoImage(
        file=relative_to_assets("entry_6.png"))
    entry_bg_4 = canvas.create_image(
        895.5,
        374.5,
        image=entry_image_6
    )
    entry_7 = Text(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11}
    )
    entry_7.place(
        x=673.0 + 100.0 + 53.0,
        y=345.0 + 28,
        width=300.0,
        height=57.0
    )
    canvas.create_text(
        667.0 + 100.0 + 53.0,
        315.0,
        anchor="nw",
        text="Texto cifrado",
        fill="#FFFFFF",
        font=("Inter", 24 * -1)
    )
    entry_7.config(state='disabled')