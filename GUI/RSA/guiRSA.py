# -*- coding: utf-8 -*-
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import messagebox
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
from sympy import isprime
from numpy import cumsum
from Main.RSA import ClassRSA


def guiRSA(window):

    OUTPUT_PATH = Path(__file__).parent
    ASSETS_PATH = OUTPUT_PATH / Path("./assets")
    Rsa = ClassRSA();

    global button_image_1, button_image_2, button_image_3

    def relative_to_assets(path: str) -> Path:
        return ASSETS_PATH / Path(path)

    def if_integer(string):

        if string[0] == ('-', '+'):
            return string[1:].isdigit()

        else:
            return string.isdigit()

    def comprobar():
        if entry_1.get() == "" or entry_2.get() == "" or entry_3.get() == "" or entry_4.get() == "" or entry_5.get() == "":
            messagebox.showwarning("", "No puede ir un campo vacio")
            return False
        if if_integer(entry_1.get()) and if_integer(entry_2.get()) and if_integer(entry_3.get()) and if_integer(
                entry_4.get()) and if_integer(entry_5.get()):
            pass
        else:
            messagebox.showwarning("", "Verifique los campos de la clave, solo enteros")
            return False
        if isprime(int(entry_1.get())) and isprime(int(entry_2.get())):
            pass
        else:
            messagebox.showwarning("", "P o Q no son primos")
            return False
        return True

    def on_enter(e):
        if entry_2.get() == 'Inserte un primo válido o genere una clave':
            entry_2.delete(0, 'end')

    def on_leave(e):
        if entry_2.get() == '':
            entry_2.insert(0, 'Inserte un primo válido o genere una clave')

    def borrarCampos():
        entry_1.delete(0, "end")
        entry_2.delete(0, "end")
        entry_3.delete(0, "end")
        entry_4.delete(0, "end")
        entry_5.delete(0, "end")

    def generarClave():
        Rsa.generarKey()
        borrarCampos()
        entry_1.insert(0, Rsa.p)
        entry_2.insert(0, Rsa.q)
        entry_3.insert(0, Rsa.d)
        entry_4.insert(0, Rsa.n)
        entry_5.insert(0, Rsa.e)

    def capturarClave():
        Rsa.p = int(entry_1.get())
        Rsa.q = int(entry_2.get())
        Rsa.d = int(entry_3.get())
        Rsa.n = int(entry_4.get())
        Rsa.e = int(entry_5.get())

    def encriptar():
        entry_7.delete('1.0', END)
        m = Rsa.preprocess_stringv2(entry_6.get('1.0', END))
        if (comprobar()):
            capturarClave()
            if (m == ""):
                messagebox.showwarning("", "Texto a cifrar no puede ir vacio")
            else:
                text = Rsa.block_convert(m)
                encr = []
                for t in text:
                    encr.append(Rsa.encriptar(t))
                des = ','.join(map(str, encr))
                entry_7.insert(END, des)
        else:
            return False

    def desencriptar():
        entry_6.delete('1.0', END)
        m = entry_7.get('1.0', END).replace(' ', '').replace('\n', '')
        if (comprobar()):
            capturarClave()
            if (m == ""):
                messagebox.showwarning("", "Texto a descifrar no puede ir vacio")
            else:
                decrip = list(map(int, m.split(",")))
                desencr = []
                for t in decrip:
                    desencr.append(Rsa.desencriptar(t))
                textEncrip = Rsa.num_to_text(desencr)
                des = "".join("".join(item) for item in textEncrip)[::-1]
                entry_6.insert(END, des)
        else:
            return False

    canvas = Canvas(
        window,
        bg="#E4E4EE",
        height=692 - 28,
        width=1191,
        bd=0,
        highlightthickness=0,
        relief="ridge"
    )

    canvas.place(x=0, y=28)
    canvas.create_rectangle(
        630.0,
        0.0,
        1442.0,
        1024.0,
        fill="#164FD5",
        outline="")

    canvas.create_text(
        42.0,
        24.0,
        anchor="nw",
        text="RSA",
        fill="#000000",
        font=("Inter", 64 * -1)
    )

    canvas.create_text(
        228.0,
        74.0,
        anchor="nw",
        text="Privado",
        fill="#000000",
        font=("Inter", 36 * -1)
    )

    canvas.create_text(
        834.0,
        141.0,
        anchor="nw",
        text="Público",
        fill="#000000",
        font=("Inter", 36 * -1)
    )

    button_image_1 = PhotoImage(
        file=relative_to_assets("button_1.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: generarClave(),
        relief="flat"
    )
    button_1.place(
        x=761.0,
        y=61.0,
        width=277.0,
        height=65.0
    )

    button_image_2 = PhotoImage(
        file=relative_to_assets("button_2.png"))
    button_2 = Button(
        image=button_image_2,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: desencriptar(),
        relief="flat"
    )
    button_2.place(
        x=759.0,
        y=629.0,
        width=260.0,
        height=65.0
    )

    button_image_3 = PhotoImage(
        file=relative_to_assets("button_3.png"))
    button_3 = Button(
        image=button_image_3,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: encriptar(),
        relief="flat"
    )
    button_3.place(
        x=169.0,
        y=629.0,
        width=260.0,
        height=65.0
    )

    entry_image_1 = PhotoImage(
        file=relative_to_assets("entry_1.png"))
    entry_bg_1 = canvas.create_image(
        290.5,
        176.5,
        image=entry_image_1
    )
    entry_1 = Entry(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11}
    )
    entry_1.bind("<FocusIn>", on_enter)
    entry_1.bind("<FocusOut>", on_leave)
    entry_1.insert(0, 'Inserte un primo válido o genere una clave')
    entry_1.place(
        x=46.0,
        y=175.0,
        width=489.0,
        height=57.0,
    )

    canvas.create_text(
        42.0,
        118.0,
        anchor="nw",
        text="Primo p",
        fill="#164FD5",
        font=("Inter", 24 * -1)
    )

    entry_image_2 = PhotoImage(
        file=relative_to_assets("entry_2.png"))
    entry_bg_2 = canvas.create_image(
        290.5,
        274.5,
        image=entry_image_2
    )
    entry_2 = Entry(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11}
    )
    entry_2.bind("<FocusIn>", on_enter)
    entry_2.bind("<FocusOut>", on_leave)
    entry_2.insert(0, 'Inserte un primo válido o genere una clave')
    entry_2.place(
        x=46.0,
        y=273.0,
        width=489.0,
        height=57.0
    )

    entry_image_3 = PhotoImage(
        file=relative_to_assets("entry_3.png"))
    entry_bg_3 = canvas.create_image(
        290.5,
        384.5,
        image=entry_image_3
    )
    entry_3 = Entry(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11}
    )
    entry_3.place(
        x=46.0,
        y=383.0,
        width=489.0,
        height=57.0
    )

    canvas.create_text(
        43.0,
        216.0,
        anchor="nw",
        text="Primo q",
        fill="#164FD5",
        font=("Inter", 24 * -1)
    )

    entry_image_4 = PhotoImage(
        file=relative_to_assets("entry_4.png"))
    entry_bg_4 = canvas.create_image(
        917.5,
        274.5,
        image=entry_image_4
    )
    entry_4 = Entry(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11}
    )
    entry_4.place(
        x=673.0,
        y=273.0,
        width=489.0,
        height=57.0
    )

    canvas.create_text(
        43.0,
        314.0,
        anchor="nw",
        text="Número d",
        fill="#164FD5",
        font=("Inter", 24 * -1)
    )

    entry_image_5 = PhotoImage(
        file=relative_to_assets("entry_5.png"))
    entry_bg_5 = canvas.create_image(
        917.5,
        372.5,
        image=entry_image_5
    )
    entry_5 = Entry(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11}
    )
    entry_5.place(
        x=673.0,
        y=371.0,
        width=489.0,
        height=57.0
    )

    canvas.create_text(
        660.0,
        207.0,
        anchor="nw",
        text="Número n",
        fill="#FFFFFF",
        font=("Inter", 24 * -1)
    )

    canvas.create_text(
        660.0,
        311.0,
        anchor="nw",
        text="Número e",
        fill="#FFFFFF",
        font=("Inter", 24 * -1)
    )

    entry_image_6 = PhotoImage(
        file=relative_to_assets("entry_6.png"))
    entry_bg_6 = canvas.create_image(
        290.5,
        512.0,
        image=entry_image_6
    )
    entry_6 = Text(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11}
    )
    entry_6.place(
        x=46.0,
        y=479.0,
        width=489.0,
        height=120.0
    )

    canvas.create_text(
        43.0,
        422.0,
        anchor="nw",
        text="Texto claro",
        fill="#164FD5",
        font=("Inter", 24 * -1)
    )

    entry_image_7 = PhotoImage(
        file=relative_to_assets("entry_7.png"))
    entry_bg_7 = canvas.create_image(
        899.5,
        512.0,
        image=entry_image_7
    )
    entry_7 = Text(
        bd=0,
        bg="#C4C4C4",
        highlightthickness=0,
        font={'family': 'Consolas', 'size': 11}
    )
    entry_7.place(
        x=673.0,
        y=479.0,
        width=453.0,
        height=120.0
    )

    canvas.create_text(
        660.0,
        422.0,
        anchor="nw",
        text="Texto cifrado",
        fill="#FFFFFF",
        font=("Inter", 24 * -1)
    )
